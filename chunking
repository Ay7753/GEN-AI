def chunk_text(text, chunk_size=200, overlap=50):
    chunks = []
    start = 0
    text_length = len(text)

    while start < text_length:
        end = min(start + chunk_size, text_length)
        chunks.append(text[start:end])
        start += chunk_size - overlap

    return chunks

# Example usage
document = """Retrieval-Augmented Generation (RAG) is a technique that 
combines retrieval of relevant knowledge with the power of large language models. 
It allows models to access external information beyond their training data."""

chunks = chunk_text(document, chunk_size=50, overlap=10)
for i, c in enumerate(chunks, 1):
    print(f"Chunk {i}:\n{c}\n")
